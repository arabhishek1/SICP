Ex 1.11
		A function f is defined by the rule that f(n) = n if n<3 and f(n) = f(n - 1) + 2f(n - 2) + 3f(n -3) if n> 3. 
	Write a procedure that computes f by means of a recursive process. Write a procedure that computes f by means of an iterative process
		Recursive process:
			(def (fn n)
				(if (< n 3))
					n
					(+ (fn n-1) (* 2 (fn n-2)) (* 3 (fn n-3))))

		Iterative process:
			(define (fn n) 
   				(define (iter a b c count) 
     				(if (= count 0) 
       					a 
       					(iter b c (+ c (* 2 b) (* 3 a)) (- count 1)))) 
   				(iter 0 1 2 n))


Ex 1.12
		Pascal triangle
		(define (Pascal-triangle n i)
  			(cond ((= i 1) 1)
        		  ((= i n) 1)
        		  (else (+ (Pascal-triangle (- n 1) (- i 1)) 
                 		   (Pascal-triangle (- n 1) i)))))
